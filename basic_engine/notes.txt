Goal: Generic ObjectOriented Game Enigne

Edge cases:
    pawn, en passant
    castling
    
Other weird things: 
    pawn-promotion
    king must move out of check
    king cannot move into check
    other peices can't move in a way that puts king in check

figure out inheritance of a king(piece)

1/17

store board position with 1=white vs 2=black

two_by_ones()

try filtering pieces by b_white property

get_available_moves()
    eliminate own piece blocks
    allow opponent piece capture

1/18

spaces = X is not implemented -> king is not implemented
pawn move is not implemented
    upacross(spaces = 2, only_up = True)

    filter_blocking can give all the available from all possible
filter_by_blocking()

king and enpassant-vulnerable-pawn are needed as enums on board

why does the debug break in VScode on print IOError?
    > print rook_moves
    > IOError: [Errno 2] No such file or directory


board should store edge cases:
     king_can_castle, rook_can_castle, en_passant_vulnerable [0,1,,0,0]...

    -> so that, piece.get_available_moves(board) is full evaulation
       not: piece.get_available_moves(board, white's pawns, etc...)
